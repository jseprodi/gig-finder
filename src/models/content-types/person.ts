
/** 
* This file has been auto-generated by '@kontent-ai/model-generator@8.1.2'.
* 
* (c) Kontent.ai
*  
* -------------------------------------------------------------------------------
* 
* Project: Concerts
* Environment: Production
* Id: c1ad4901-f748-000b-2b83-2c4fa51e2983
* 
* -------------------------------------------------------------------------------
**/

import type { Elements } from "@kontent-ai/delivery-sdk";
import type { CoreContentType } from "../system/index.ts";
import type { Vocation } from "../taxonomies/index.ts";

/**
 * Person
 *
 * Id: 8f8faf57-cd92-4d1b-a2ae-245731c6cb06
 * Codename: person
 */
export type Person = CoreContentType<
  PersonElementCodenames,
  {
    /**
     * First Name
     *
     * Type: text
     * Required: true
     * Codename: first_name
     * Id: 35cce80f-b41e-4bd0-9419-ae90a3d6d747
     * Guidelines: First name of the person
     */
    readonly first_name: Elements.TextElement;
    /**
     * Last Name
     *
     * Type: text
     * Required: false
     * Codename: last_name
     * Id: 913b4b67-421f-46dc-ae85-0962a62f4bce
     * Guidelines: Last name of the person
     */
    readonly last_name: Elements.TextElement;
    /**
     * Vocation
     *
     * Type: taxonomy
     * Required: true
     * Codename: vocation
     * Id: 72a5f527-e053-43d6-b879-86d15cf11368
     * Guidelines: Indicate whether this person is a member of a band or a concert review author.
     */
    readonly vocation: Elements.TaxonomyElement<Vocation, "vocation">;
  },
  "person"
>;

/**
 * Type representing all available element codenames for Person
 */
export type PersonElementCodenames = "first_name" | "last_name" | "vocation";

/**
 * Type guard for Person
 *
 * Id: 8f8faf57-cd92-4d1b-a2ae-245731c6cb06
 * Codename: person
 */
export function isPerson(
  item: CoreContentType | undefined | null,
): item is Person {
  return item?.system?.type === "person";
}
